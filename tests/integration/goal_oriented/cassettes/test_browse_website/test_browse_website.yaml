interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3782'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RTS4/TMBC+8yusOacvwnZLLhzQqqxAcECAEEGV60wTU9sT7ElbUfW/IzdJabtI
        LEJc5/E95rEHXUAGqpKsbG0Gt3fq5uVUb56/bX7cmcl4zp/fzT++auav37g5JEDLb6i46xgqsrVB
        1uQgAeVRMhaQTaaz9HZym6azBCwVaCCDsuZBOrwZcOOXNBin4wkk0ARZImR7qD3ZmhdMa3QBstmz
        WQK/sE/xpxGRiaU5hSbj2fSQgKpIKwyQfdmDxdDjejIIGcgQdGDpOKokx+iig33uhBAiB66oKSsO
        OWSiC3YJ3HEM5nAvHGIhmEQTUHCFYulpG3CxxWXQjEKRtdIdKzY6aBYVc52NRkuidRgyBeVljXFg
        IyVZGiobHFksNMtoMSzSdKRdgbthxdaICLXSEa9CUXutUNCq5SVaD3NIznV6lIGcdmUvVkn3aKGx
        pk/GREDpVSVW5B9HXhvpWt6B+PD3nHnuBuL9HzjbIrnBszSTkGKlDQonLRZXnEPe8bGrl8QyrBfd
        TV0oOsX6qit/ymvWSgd7fQnoQuNjm2RxL6TtJqddeTKiyHtULLRbkbfHTQtyD0Z+BiE3sT8WnPcw
        XcBF19drCDXKdS9xq435nwfQEh+S/oM6zAcPFDfTaroUcaVd+vL6+dpE403b/k/fdMHWAn9vMMTK
        Fv1TnL8Ov7f7ord7tNw5z90BDgmstNOhWrT/BxkEphoSOFJDNj58PTz5CQAA//8DAGIDodhhBQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c51c3f7fa8b0c5f-SOF
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 10 May 2023 11:15:55 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-gsghk4kr5xmbjprowdzr8zt2
      openai-processing-ms:
      - '16709'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86491'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.338s
      x-request-id:
      - de243fc6fada303e5966d6758c796afa
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"Books
      to Scrape We love being scraped! Home Books Philosophy Meditations Meditations
      \u00a325.89 In stock (1 available) Warning! This is a demo website for web scraping
      purposes. Prices and ratings here were randomly assigned and have no real meaning.
      Product Description Written in Greek, without any intention of publication,
      by the only Roman emperor who was also a philosopher, the Meditations of Marcus
      Aurelius (AD 121-180) offer a remarkable series of challenging spiritual reflections
      and exercises developed as the emperor struggled to understand himself and make
      sense of the universe. Ranging from doubt and despair to conviction and ex Written
      in Greek, without any intention of publication, by the only Roman emperor who
      was also a philosopher, the Meditations of Marcus Aurelius (AD 121-180) offer
      a remarkable series of challenging spiritual reflections and exercises developed
      as the emperor struggled to understand himself and make sense of the universe.
      Ranging from doubt and despair to conviction and exaltation, they cover such
      diverse topics as the nature of moral virtue, human rationality, divine providence,
      and Marcus'' own emotions. But while the Meditations were composed to provide
      personal consolation and encouragement, in developing his beliefs Marcus Aurelius
      also created one of the greatest of all works of philosophy: a timeless collection
      of extended meditations and short aphorisms that has been consulted and admired
      by statesmen, thinkers and readers through the centuries. ...more Product Information
      UPC4f19709e47883df5 Product TypeBooks Price (excl. tax)\u00a325.89 Price (incl.
      tax)\u00a325.89 Tax\u00a30.00 Availability In stock (1 available) Number of
      reviews 0 Products you recently viewed The Nicomachean Ethics \u00a336.34 In
      stock Add to basket Run, Spot, Run: The ... \u00a320.02 In stock Add to basket
      Critique of Pure Reason \u00a320.75 In stock Add to basket At The Existentialist
      Caf\u00e9: ... \u00a329.93 In stock Add to basket Kierkegaard: A Christian Missionary
      ... \u00a347.13 In stock Add to basket Proofs of God: Classical ... \u00a354.21
      In stock Add to basket\"\"\" Using the above text, answer the following question:
      \"What is the price of the book?\" -- if the question cannot be answered using
      the text, summarize the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2407'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOwUrDQBRF937FcNfTkjSmqbMUBEFqpbgQrZTp5LWZNpkXM6+0UPI1/olfJhWt
        2wPn3HuCL2HgKiuuaetBcefy19vt0/TxvqibeXFIklk2O8yr7cfLAzR4tSUnv8bQcdPWJJ4DNFxH
        VqiESceTrEiLbJxqNFxSDYNNK4NsmA9k3614kGRJCo19tBuCOaHtuGllKbyjEGGuJ7nGf/vCR6mG
        sNj6QvJk3Gu4ir2jCPN2QkPxr9pxTTCwMfooNsj5IwehcP7/XJFqO+9I8VpJRWrFvFMLTKn0Ys+z
        cQHlo/r6HOXDyY1W1jnuSh82SvjHEDrKEL3G2gcfq2VHNnKAQRRuoeFDSUeYpH/vr74BAAD//wMA
        BHafj2gBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c51c4846c550c5f-SOF
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 10 May 2023 11:16:03 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-gsghk4kr5xmbjprowdzr8zt2
      openai-processing-ms:
      - '1911'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89422'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 385ms
      x-request-id:
      - 962190e388e1f9e4acff19bb2e82afcc
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "\"\"\"The
      price of the book \"Meditations\" is \u00a325.89, according to the text.\"\"\"
      Using the above text, answer the following question: \"What is the price of
      the book?\" -- if the question cannot be answered using the text, summarize
      the text."}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '361'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOwU7CQBRF937F5K6nDaUUcLYGo4kYje7UkOn0QQfaeU3noSSkX+Of+GUGo7g9
        yTn3HuErGLjaimu7JpktXFEe7p9u/PJhG95vr++uPgq/mITFY0bQ4HJLTn6N1HHbNSSeAzRcT1ao
        gsmm83yWzfJprtFyRQ0MNp0keVoksu9LTkb5KIPGPtoNwRzR9dx2shLeUYgw04nGf/qMx5mGsNjm
        TObFoOFq9o4izMsRLcW/Zs8NwcDG6KPYIKeHHITC6f1zTarrvSPFayU1qZJ5p16xpMqLPa3GVygf
        1dfnuEjnl1pZ57ivfNgo4R9D6CApBo21Dz7Wq55s5ACDKNxBw4eKDjCj4W24+AYAAP//AwDFwZpj
        ZgEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c51c491b8910c5f-SOF
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 10 May 2023 11:16:05 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-gsghk4kr5xmbjprowdzr8zt2
      openai-processing-ms:
      - '1708'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89924'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 50ms
      x-request-id:
      - e7f340e46a34ddc223c135b0a9a70a1e
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "This reminds you of these events from your past: \nI was
      created."}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to use the browse_website command to visit http://books.toscrape.com/catalogue/meditations_33/index.html
      and find the price of the book.\",\n        \"reasoning\": \"I can use the browse_website
      command to visit the website and search for the price of the book.\",\n        \"plan\":
      \"- Use the browse_website command to visit the website\\n- Search for the price
      of the book\\n- Save the price to a file named browse_website.txt\\n- Use the
      task_complete command to complete the task\",\n        \"criticism\": \"I need
      to ensure that I am searching for the correct information on the website and
      that I am saving the information to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and search for
      the price of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "user",
      "content": "Command browse_website returned: Answer gathered from website: The
      price of the book \"Meditations\" is \u00a325.89, according to the text. \n
      \n Links: [''Books to Scrape (http://books.toscrape.com/index.html)'', ''Home
      (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5541'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RTzYrbMBC+9ynEnJ2QXyfra+nCHrb0kEJpXYwsT2w1tsZI4yYQ/DR9kz5ZkWMn
        WXd7KexR8/P9aGbOoDOIQBWSVVWXk80Htcbn07Kwj6tw/f4R092n5mt2DHcfvzQQAKU/UHHfMVVU
        1SWyJgMBKIuSMYNoHm6Xm/lmGYYBVJRhCRHkNU+W0/WEG5vSZLaczSGAxskcITpDbamqOWE6oHEQ
        zRerbQA38GtiMQ8DYGJZ3mpX4aoNQBWkFTqIvp2hQjcAWyoRIpDOacfSsJdJhtF4C+fYCCFEDFxQ
        kxfsYohEH+wTeGIfjOFJGMRMMImj1YyCCxS11QoF7btHSnTwaSn2ukRhZIWZSC0dHSZHTJ1mnPKJ
        ReO0ybuODihhSroGRVUlTTaNIbhXYFE6MtrkgwwljWgc/hvBi3Dy5/9LHEuoS2ku7BPx+U2Z49jc
        KFi6Q9LvwAuKa2yoGulVVrNW2lXjyaFxjfVtksWTkNXdLBRZi4pv8kRHdq30fse12uzJVtIvqEf3
        Kd8+/j5XozwMUo66LN9+fBf6Nhj2u4f+a709xEXZCykjA9Lm48u4JHztDeKVcd7jjA9q96q9OI7h
        GTPN3bc6/xTaid+/Fuvp9uFqrbPXu4xNC20Ae220K5LLvUAEjqmGALTJ8ATRrP3evvsDAAD//wMA
        Hcyul+wEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c51c4a138de0c5f-SOF
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 10 May 2023 11:16:22 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-gsghk4kr5xmbjprowdzr8zt2
      openai-processing-ms:
      - '16138'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86502'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.332s
      x-request-id:
      - d59e13ff717cdabe7f6e37f28eea825d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are browse_website-GPT, an AI designed to use the browse_website command to
      visit http://books.toscrape.com/catalogue/meditations_33/index.html, answer
      the question ''What is the price of the book?'' and write the price to a file
      named \"browse_website.txt\", and use the task_complete command to complete
      the task.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Use the browse_website command
      to visit http://books.toscrape.com/catalogue/meditations_33/index.html and answer
      the question ''What is the price of the book?''\n2. Write the price of the book
      to a file named \"browse_website.txt\".\n3. Use the task_complete command to
      complete the task.\n4. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n7.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks:
      Get text summary, args: \"url\": \"<url>\"\n9. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n10. list_agents: List
      GPT Agents, args: () -> str\n11. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n12. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "This reminds you of these events from your past: \nI was
      created."}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to use the browse_website command to visit http://books.toscrape.com/catalogue/meditations_33/index.html
      and find the price of the book.\",\n        \"reasoning\": \"I can use the browse_website
      command to visit the website and search for the price of the book.\",\n        \"plan\":
      \"- Use the browse_website command to visit the website\\n- Search for the price
      of the book\\n- Save the price to a file named browse_website.txt\\n- Use the
      task_complete command to complete the task\",\n        \"criticism\": \"I need
      to ensure that I am searching for the correct information on the website and
      that I am saving the information to the correct file.\",\n        \"speak\":
      \"I will use the browse_website command to visit the website and search for
      the price of the book.\"\n    },\n    \"command\": {\n        \"name\": \"browse_website\",\n        \"args\":
      {\n            \"url\": \"http://books.toscrape.com/catalogue/meditations_33/index.html\",\n            \"question\":
      \"What is the price of the book?\"\n        }\n    }\n}"}, {"role": "user",
      "content": "Command browse_website returned: Answer gathered from website: The
      price of the book \"Meditations\" is \u00a325.89, according to the text. \n
      \n Links: [''Books to Scrape (http://books.toscrape.com/index.html)'', ''Home
      (http://books.toscrape.com/index.html)'', ''Books (http://books.toscrape.com/catalogue/category/books_1/index.html)'',
      ''Philosophy (http://books.toscrape.com/catalogue/category/books/philosophy_7/index.html)'',
      '' (http://books.toscrape.com/catalogue/the-nicomachean-ethics_75/index.html)'']"},
      {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I need to write the price of the book to a file named browse_website.txt using
      the write_to_file command.\",\n        \"reasoning\": \"I can use the write_to_file
      command to save the price of the book to a file named browse_website.txt.\",\n        \"plan\":
      \"- Use the write_to_file command to save the price of the book to a file named
      browse_website.txt\\n- Use the task_complete command to complete the task\",\n        \"criticism\":
      \"I need to ensure that I am using the correct file name and that I am writing
      the correct information to the file.\",\n        \"speak\": \"I will use the
      write_to_file command to save the price of the book to a file named browse_website.txt.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"browse_website.txt\",\n            \"text\": \"The price of the book \\\"Meditations\\\"
      is \u00a325.89.\"\n        }\n    }\n}"}, {"role": "user", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6646'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RSwY7TQAy98xWWz2nVqttmyb1IKw6wWlYCEVRNJk4yNBmHGWdbqcq/o2nTtBQk
        BIijn+3n92wf0OSYoK6U6KatJ/FaL/fNMz09vWtpvX58z1nxNv7kV4+7j28wQs6+kpahY6q5aWsS
        wxYj1I6UUI7JfHW/iOfx4n4ZYcM51Zhg2cpkMV1OpHMZT2aL2Rwj7LwqCZMDto6bVjbCW7Iek/ld
        aL2QXxLx6wiFRdUXaLW66yPUFRtNHpPPB2zIn4kd14QJKu+NF2UlyGQrZIOFQ2oBAFKUiruyEp9i
        AgM4JGgvAUzxASr1QjBoohykIhDlt8AFFMbmxpZHrHVGUwBDkDFvQdkcvHoJBUZAGBQUpqYpPIBW
        FizvoPM0Em7OM8KwJjQLj3PHqmmK0bVSR8qzNbb8ndwjYUWOQDkCy1B0LsSgdFi1B0ffOuMov53Q
        1sqeyCfw/Md6b8i0M2K08c2J8cO1oDHnoWAHUhn/S8u+JbX9n9fZmbr++/OcpPbR+cmG8p9+zKqG
        Ti5+oL8xq1x5+57Xhx/X+G+uoVIeMiJ7WeXo5OhmMJXaHvsIC2ONrzYnCZigF24xQmNz2mMy67/0
        r74DAAD//wMA1rDcmGAEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c51c517bc5c0c5f-SOF
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 10 May 2023 11:16:38 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-gsghk4kr5xmbjprowdzr8zt2
      openai-processing-ms:
      - '13203'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86524'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.317s
      x-request-id:
      - 2f774bb0d0c1250c1b3e0420958f1040
    status:
      code: 200
      message: OK
version: 1
